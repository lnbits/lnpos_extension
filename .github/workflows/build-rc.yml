name: Build Release Candidate

on:
  push:
    branches:
      - 'feature/**'

jobs:
  build-rc:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get next RC version
        id: version
        run: |
          # Get the latest RC tag for v1.0.1
          LATEST_RC=$(git tag -l "v1.0.1-rc.*" | sort -V | tail -1)
          
          if [ -z "$LATEST_RC" ]; then
            # No RC tags exist, start with rc.1
            NEXT_RC="v1.0.1-rc.1"
          else
            # Extract the RC number and increment
            RC_NUM=$(echo $LATEST_RC | sed 's/.*-rc\.//')
            NEXT_RC_NUM=$((RC_NUM + 1))
            NEXT_RC="v1.0.1-rc.$NEXT_RC_NUM"
          fi
          
          echo "next_version=$NEXT_RC" >> $GITHUB_OUTPUT
          echo "Next RC version: $NEXT_RC"
      
      - name: Create RC tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a ${{ steps.version.outputs.next_version }} -m "Release candidate ${{ steps.version.outputs.next_version }} - Cursor-MCP-MAF"
          git push origin ${{ steps.version.outputs.next_version }}
      
      - name: Create archive
        run: |
          # Create a temporary directory structure that matches LNbits expectations
          mkdir -p temp_package/lnpos
          
          # Copy all extension files to the lnpos subdirectory
          # Copy Python files
          cp *.py temp_package/lnpos/
          
          # Copy configuration files
          cp *.json temp_package/lnpos/
          
          # Copy other necessary files
          cp *.md temp_package/lnpos/
          cp *.toml temp_package/lnpos/
          cp *.lock temp_package/lnpos/
          cp LICENSE temp_package/lnpos/ 2>/dev/null || true
          cp Makefile temp_package/lnpos/ 2>/dev/null || true
          cp toc.md temp_package/lnpos/ 2>/dev/null || true
          
          # Copy directories
          cp -r static temp_package/lnpos/
          cp -r templates temp_package/lnpos/
          cp -r tests temp_package/lnpos/
          
          # Create the zip file from the temporary directory
          cd temp_package
          zip -r ../lnpos_extension-${{ steps.version.outputs.next_version }}.zip .
          cd ..
          
          # Clean up temporary directory
          rm -rf temp_package
      
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.version.outputs.next_version }} \
            --title "${{ steps.version.outputs.next_version }}" \
            --notes "## Release Candidate ${{ steps.version.outputs.next_version }}
            
            This is an automated release candidate build from branch: ${{ github.ref_name }}
            
            **Commit:** ${{ github.sha }}
            **Branch:** ${{ github.ref_name }}
            
            Manual registry update required.
            
            Created by Cursor-MCP-MAF" \
            --prerelease \
            lnpos_extension-${{ steps.version.outputs.next_version }}.zip 